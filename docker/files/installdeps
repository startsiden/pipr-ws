#!/bin/bash

#
# Usage: bin/installdeps <branchname>
#
# Example:
#        # Install dependencies, preferring production packages
#        bin/installdeps
#
#        # Install dependencies preferring -develop packages
#        bin/installdeps develop
#
#

LC_ALL=C
APTCMD="apt-get -y --force-yes"
BRANCH=$1

function die() {
 echo -e "\e[31m$1\e[0m";
 exit 1;
}

function module_to_packages() {
   PM_PATH=`echo -n $1 | perl -wple 's{::}{/}gmx; $_ .= ".pm"'`;

   apt-file | grep -- " -f " > /dev/null
   if [ $? -eq 0 ]; then
       perl -wle 'map { print "$_/$ARGV[0]" } sort { length $a <=> length $b } grep { m{^/usr} } @INC' $PM_PATH | apt-file search -f - | cut -d":" -f1;
   else
       for path in `perl -wle 'map { print "$_/$ARGV[0]" } sort { length $a <=> length $b } grep { m{^/usr} } @INC' $PM_PATH`; do
           apt-file search $path | cut -d":" -f1;
       done;
   fi
}

if [ -e 'Makefile.PL' ]; then
  if [ -e '/etc/debian_version' ]; then
    sudo apt-get update
    if ! command -v apt-file 2>&1 >/dev/null; then
      echo "Installing apt-file";
      sudo $APTCMD -qq install apt-file
    fi;
    echo -n "Checking if Module::Install::Debian is present, installing if not...";
    perl -MModule::Install::Debian -MModule::Install::Base -wle 'print "OK";' || sudo $APTCMD install libmodule-install-debian-perl libmodule-install-perl || die "Not found, did you add the Startsiden repositories?";
    echo -n "Checking if Module::Install::Debian is newer than 0.040...";
    perl -wle 'use Module::Install::Debian 0.040; print "OK";' || die "Please make sure you have a newer Module::Install::Debian module (>=0.040)";
    echo "Updating apt-file cache..."
    sudo apt-file update > /dev/null

    echo "Checking if Module::Install::Catalyst is needed, installing if it is";
    grep -q catalyst Makefile.PL && (perl -MModule::Install::Catalyst -wle '1;' || sudo $APTCMD install libcatalyst-devel-perl || die "Not found, did you add the Startsiden repositories?");

    echo "Fetching and installing Debian dependencies from Makefile.PL...";
    grep dpkg_requires Makefile.PL | perl -MData::Dumper -MModule::Install::Debian -e '
      *Module::Install::Debian::can_run = sub { 1 };
      *Module::Install::Debian::_dpkg_install = sub {
          my ($self, $pkg) = @_;
          return "sudo apt-get install --force-yes --yes $pkg";
      };
      my $missing_packages = {};
      my $mid = bless {}, "Module::Install::Debian";
      sub dpkg_requires {
        my $res = $mid->dpkg_requires(@_);
        map { $missing_packages->{$_->[0]} = $_->[1]; } @{$res} if $?;
        1;
      };
      while (eval(<>)) {};
      if (scalar keys %{$missing_packages}) {
          print "\e[1;31mERROR:\e[0m Missing packages:\n";
          map { print " * " . $_ . " >= " . $missing_packages->{$_} . "\n"; } keys %{$missing_packages};
          exit 1;
      }
      exit 0;
    ' || (echo -e "\e[1;31mERROR:\e[0m Unable to find some deb packages, make sure the local package list is updated with: 'sudo apt-get update' and try again." || exit 1);

    echo "Fetching Perl dependencies from Makefile.PL...";
    # TODO, enforce versions!
    DEB_DEPS="";
    PERL_DEPS=`perl Makefile.PL --checkdeps --testonly 2>&1 | grep 'not found' | cut -d" " -f3`;
    for dep in ${PERL_DEPS}; do
       DEB_DEP_CANDS=$(module_to_packages "$dep");
       if [ -n "$BRANCH" ]; then
           DEB_DEP_CANDS_BRANCH=`echo "$DEB_DEP_CANDS" | grep -- "-$BRANCH$"`;
           if [ -n "$DEB_DEP_CANDS_BRANCH" ]; then
                DEB_DEP_CANDS="$DEB_DEP_CANDS_BRANCH $(echo "$DEB_DEP_CANDS" | grep -v -- "-$BRANCH$")";
           fi
       fi
       DEB_DEP=`echo "$DEB_DEP_CANDS" | head -n 1 | cut -d" " -f1`;
       DEB_DEPS="${DEB_DEPS} ${DEB_DEP}";
    done
    if [ "$DEB_DEPS" ]; then
      echo "Installing Perl dependencies via apt-get: $DEB_DEPS";
      sudo $APTCMD -qq install $DEB_DEPS || exit 1;
    fi;
    perl Makefile.PL --checkdeps --testonly 2>&1 | grep 'not found' | cut -d" " -f3-4 | perl -le 'my $e = 0; while(<>) { chomp; my ($pkg,$ver) = split/ /; print "Not found(perl): $pkg >= $ver"; $e++; } exit $e;' || exit 1;
    echo -e "\e[1;32mOK\e[0m";
    exit 0;
  else
    if ! command -v cpanm 2>&1 >/dev/null; then
      echo "Installing CPANMinus...";
      ( curl -L http://cpanmin.us || wget -O - http://cpanmin.us) | perl - App::cpanminus
      echo "Installing dependencies via CPANMinus...";
      PATH=~/perl5/bin cpanm --installdeps .
    fi;
  fi;
else
  echo "Only Makefile.PL supported for now";
  exit 1;
fi;
